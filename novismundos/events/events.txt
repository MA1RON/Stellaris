namespace = sempervigilate
country_event = {
	id = sempervigilate.1
	hide_window = yes
	fire_only_once = yes
	trigger = {
		NOT = {
			has_global_flag = sempervigilate_installed
		}
	}
	immediate = {
		set_global_flag = sempervigilate_installed
	}
}

# Scopes:
# Scope: root: country this: country
country_event = {
	id = sempervigilate.2
	hide_window = yes
	is_triggered_only = yes	# Fire only when called from elsewhere.
	trigger = {
		has_civic = sempervigilate_civic
	}
	immediate = {
		every_owned_fleet = {
			# Iterate through every owned fleet of THIS country.
			limit = {
				is_ship_class = shipclass_science_ship
			}
			delete_fleet = {
				target = this				# Delete THIS fleet.
				kill_leader = no			# Do not delete leader of THIS fleet (unassigns).
			}
		}
		create_leader = {
			# Create leader for THIS country.
			class = admiral
			species = this # Where THIS is the scope of where effect was written in (country, therefore species will be main country species).
		}
		create_fleet = {
			# Create fleet for THIS country.
			effect = {
				# Execute list of effects for THIS fleet.
				set_owner = prev # Set owner of THIS fleet to PREV (PREV/previous scope being country we in previous brackets refered to as THIS).
				create_ship = {
					# Create ship for THIS fleet.
					random_existing_design = destroyer # of random design which is military ship.
					graphical_culture = owner # Visual style of the ship is the same as OWNER of the fleet (can use PREV here).
				}
				set_location = {
					target = owner.capital_scope.solar_system.starbase # Set location of the fleet to owner's capital_scope's solar_system's starbase.
					distance = 10
					angle = random
					# direction = out_system
				}
				assign_leader = last_created_leader # Assigns last created leader to the fleet.
			}
		}
	}
}

namespace = semperaedificatio
country_event = {
	id = semperaedificatio.1
	hide_window = yes
	fire_only_once = yes
	trigger = {
		NOT = {
			has_global_flag = semperaedificatio_installed
		}
	}
	immediate = {
		set_global_flag = semperaedificatio_installed
	}
}

# Scopes:
# Scope: root: country this: country
country_event = {
	id = semperaedificatio.2
	hide_window = yes
	is_triggered_only = yes	# Fire only when called from elsewhere.
	trigger = {
		has_civic = semperaedificatio_civic
	}
	immediate = {
		every_owned_fleet = {
			# Iterate through every owned fleet of THIS country.
			limit = {
				is_ship_class = shipclass_military # only fleets meeting shipclass_military criteria
			}
			delete_fleet = {
				target = this				# Delete THIS fleet.
				kill_leader = no			# Do not delete leader of THIS fleet (unassigns).
			}
		}
		create_fleet = {
			# Create fleet for THIS country.
			effect = {
				# Execute list of effects for THIS fleet.
				set_owner = prev # Set owner of THIS fleet to PREV (PREV/previous scope being country we in previous brackets refered to as THIS).
				create_ship = {
					# Create ship for THIS fleet.
					random_existing_design = constructor # of random design which is science ship.
					graphical_culture = owner # Visual style of the ship is the same as OWNER of the fleet (can use PREV here).
				}
				set_location = {
					target = owner.capital_scope.solar_system.starbase # Set location of the fleet to owner's capital_scope's solar_system's starbase.
					distance = 10
					angle = random
					# direction = out_system
				}
			}
		}
	}
}

namespace = semperadeductionem
country_event = {
	id = semperadeductionem.1
	hide_window = yes
	fire_only_once = yes
	trigger = {
		NOT = {
			has_global_flag = semperadeductionem_installed
		}
	}
	immediate = {
		set_global_flag = semperadeductionem_installed
	}
}

# Scopes:
# Scope: root: country this: country
country_event = {
	id = semperadeductionem.2
	hide_window = yes
	is_triggered_only = yes	# Fire only when called from elsewhere.
	trigger = {
		has_civic = semperadeductionem_civic
	}
	immediate = {
		every_owned_fleet = {
			# Iterate through every owned fleet of THIS country.
			limit = {
				is_ship_class = shipclass_military # only fleets meeting shipclass_military criteria
			}
			delete_fleet = {
				target = this				# Delete THIS fleet.
				kill_leader = no			# Do not delete leader of THIS fleet (unassigns).
			}
		}
		create_fleet = {
			# Create fleet for THIS country.
			effect = {
				# Execute list of effects for THIS fleet.
				set_owner = prev # Set owner of THIS fleet to PREV (PREV/previous scope being country we in previous brackets refered to as THIS).
				create_ship = {
					# Create ship for THIS fleet.
					random_existing_design = colonizer
					graphical_culture = owner # Visual style of the ship is the same as OWNER of the fleet (can use PREV here).
				}
				set_location = {
					target = owner.capital_scope.solar_system.starbase # Set location of the fleet to owner's capital_scope's solar_system's starbase.
					distance = 10
					angle = random
					# direction = out_system
				}
			}
		}
	}
}